{"version":3,"sources":["components/Loading.js","components/Homepage.js","components/Error.js","components/Weather.js","components/App.js","index.js"],"names":["Loading","className","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","backgroundColor","boxShadow","Homepage","props","date","Date","useState","isloading","setIsloading","useEffect","setTimeout","classes","name","localweather","Grid","container","item","xs","Paper","onSubmit","searchInput","type","placeholder","onChange","e","setQuery","target","value","query","sm","style","weather","main","format","sys","country","onClick","convert","newtemp","Math","round","temp","unit","feels_like","marginRight","pressure","humidity","wind","speed","coord","lon","lat","temp_min","temp_max","Error","Weather","API_KEY","process","setLocalweather","setNewtemp","setUnit","getLonLat","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","fetch","then","response","json","result","catch","err","console","log","oppositeUnit","preventDefault","App","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.95d3c0ea.chunk.js","sourcesContent":["\r\n\r\nimport React from 'react';\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\nexport default Loading;","import React, { useState, useEffect } from 'react';\r\nimport { FiMapPin, FiSun, FiCloud, FiUmbrella, FiCloudSnow, FiWind, FiSunset, FiFeather } from \"react-icons/fi\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Moment from 'react-moment';\r\nimport Loading from './Loading';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none'\r\n\r\n    },\r\n}));\r\n\r\nfunction Homepage(props) {\r\n    const date = new Date();\r\n    const [isloading, setIsloading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setIsloading(false), 200)\r\n    }, [])\r\n    const classes = useStyles();\r\n\r\n    const { name } = props.localweather;\r\n\r\n    return (\r\n        isloading ? <Loading /> :\r\n            <div className={classes.root}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper} >\r\n                            <form onSubmit={props.searchInput}>\r\n                                <input className=\"search-box\" type=\"text\" placeholder=\"Check other location\" onChange={e => props.setQuery(e.target.value)} value={props.query} />\r\n                                <button className=\"search-button\">Search</button>\r\n                            </form>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Paper className={classes.paper} style={{ textAlign: \"left\" }}>\r\n                            <div className={\"weather \" + (\r\n                                props.localweather.weather && props.localweather.weather[0].main === 'Mist' ? 'weather-mist' :\r\n                                    props.localweather.weather && props.localweather.weather[0].main === 'Rain' ? 'weather-rain' :\r\n                                        props.localweather.weather && props.localweather.weather[0].main === 'Haze' ? 'weather-haze' :\r\n                                            props.localweather.weather && props.localweather.weather[0].main === 'Clear' ? 'weather-clear' :\r\n                                                props.localweather.weather && props.localweather.weather[0].main === 'Sunny' ? 'weather-sunny' :\r\n                                                    props.localweather.weather && props.localweather.weather[0].main === 'Snow' ? 'weather-snow' :\r\n                                                        'weather-clouds'\r\n                            )}>\r\n                                <div className=\"date-container\">\r\n                                    <h3 className=\"dayname\"><Moment format=\"dddd\">{date}</Moment></h3>\r\n                                    <span className=\"day-date\"><Moment format=\"ll\">{date}</Moment></span>\r\n                                    <span className=\"location\"><FiMapPin className=\"map-pin\" />{name}, {props.localweather.sys && props.localweather.sys.country}</span>\r\n                                </div>\r\n                                <div className=\"weather-container\">\r\n\r\n                                    {\r\n                                        props.localweather.weather && props.localweather.weather[0].main === 'Mist' ?\r\n                                        <FiWind className=\"weather-icon\" /> :\r\n                                        props.localweather.weather && props.localweather.weather[0].main === 'Rain' ?\r\n                                            <FiUmbrella className=\"weather-icon\" /> :\r\n                                            props.localweather.weather && props.localweather.weather[0].main === 'Haze' ?\r\n                                                <FiSunset className=\"weather-icon\" /> :\r\n                                                props.localweather.weather && props.localweather.weather[0].main === 'Clear' ?\r\n                                                    <FiFeather className=\"weather-icon\" /> :\r\n                                                    props.localweather.weather && props.localweather.weather[0].main === 'Sunny' ?\r\n                                                        <FiSun className=\"weather-icon\" /> :\r\n                                                        props.localweather.weather && props.localweather.weather[0].main === 'Snow' ? <FiCloudSnow className=\"weather-icon\" /> :\r\n                                                            <FiCloud className=\"weather-icon\" />\r\n                                                        }\r\n\r\n                                    <h1 className=\"weather-temp\" onClick={props.convert}>\r\n                                        {props.newtemp === true ? (Math.round(props.localweather.main && props.localweather.main.temp)) :\r\n                                            (Math.round(props.localweather && props.localweather.main.temp * 9 / 5) + 32)}\r\n                                        {props.unit}\r\n                                    </h1>\r\n                                    <span className=\"feels\">\r\n                                        Feels like {props.newtemp === true ? (Math.round(props.localweather.main && props.localweather.main.feels_like)) :\r\n                                            (Math.round(props.localweather.main && props.localweather.main.feels_like * 9 / 5) + 32)}\r\n                                        {props.unit}</span>\r\n                                    <h3 className=\"weather-desc\">{props.localweather.weather && props.localweather.weather[0].main}</h3>\r\n                                </div>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Paper className={classes.paper} style={{ textAlign: \"left\", marginRight: 25 }}>\r\n                            <div className=\"today-info\">\r\n                                <div className=\"precipitation\">\r\n                                    <span className=\"title\">PRESSURE</span>\r\n                                    <span className=\"value\">{props.localweather.main && props.localweather.main.pressure} mbar</span>\r\n                                </div>\r\n                                <div className=\"humidity\">\r\n                                    <span className=\"title\">HUMIDITY</span>\r\n                                    <span className=\"value\">{props.localweather.main && props.localweather.main.humidity} %</span>\r\n                                </div>\r\n                                <div className=\"wind\">\r\n                                    <span className=\"title\">WIND</span>\r\n                                    <span className=\"value\">{props.localweather.wind && props.localweather.wind.speed} km/h</span>\r\n                                </div>\r\n                                <div className=\"longitude\">\r\n                                    <span className=\"title\">LONGITUDE</span>\r\n                                    <span className=\"value\">{props.localweather.coord && props.localweather.coord.lon}°</span>\r\n                                </div>\r\n                                <div className=\"latitude\">\r\n                                    <span className=\"title\">LATITUDE</span>\r\n                                    <span className=\"value\">{props.localweather.coord && props.localweather.coord.lat}°</span>\r\n                                </div>\r\n                                <div className=\"min-temp\">\r\n                                    <span className=\"title\">MIN TEMP</span>\r\n                                    <span className=\"value\">\r\n                                        {props.newtemp === true ? (Math.round(props.localweather.main && props.localweather.main.temp_min)) :\r\n                                            (Math.round(props.localweather.main && props.localweather.main.temp_min * 9 / 5) + 32)} {props.unit\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"max-temp\">\r\n                                    <span className=\"title\">MAX TEMP</span>\r\n                                    <span className=\"value\">\r\n                                        {props.newtemp === true ? (Math.round(props.localweather.main && props.localweather.main.temp_max)) :\r\n                                            (Math.round(props.localweather.main && props.localweather.main.temp_max * 9 / 5) + 32)} {props.unit\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\n\r\n\r\nfunction Error() {\r\n    return (\r\n        <div className=\"error\">\r\n            <h3>Hold on Loading.....</h3>\r\n            <h3>Allow location to get weather report or city you searched is not found !!</h3>\r\n            <h3>Please refresh the browser and try again</h3>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Error;","import React, { useState, useEffect } from 'react';\r\nimport Homepage from './Homepage';\r\nimport Error from './Error';\r\n\r\nfunction Weather() {\r\n    const API_KEY = process.env.REACT_APP_API_KEY;\r\n    const [localweather, setLocalweather] = useState({});\r\n    const [query, setQuery] = useState(\"\");\r\n    const [newtemp, setNewtemp] = useState(true);\r\n    const [unit, setUnit] = useState(\"°C\");\r\n\r\n    //geolocation to get the local weather\r\n    const getLonLat = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                const lon = position.coords.longitude;\r\n                const lat = position.coords.latitude;\r\n                fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`)\r\n                    .then(response => response.json())\r\n                    .then(result => {\r\n                        setLocalweather(result)\r\n                        return;\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLonLat();\r\n    }, [])\r\n\r\n    //give input to get other location weather\r\n    const searchInput = (e) => {\r\n        e.preventDefault()\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=${API_KEY}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setLocalweather(result)\r\n                setQuery(\"\")\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const oppositeUnit = unit === \"°C\" ? \"°F\" : \"°C\";\r\n\r\n    const convert = () => {\r\n        if (unit === \"°C\") {\r\n            setNewtemp(false)\r\n            setUnit(oppositeUnit);\r\n        }\r\n\r\n        if (unit === \"°F\") {\r\n            setNewtemp(true)\r\n            setUnit(oppositeUnit);\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            {\r\n                !localweather.weather ? \r\n                <Error /> :\r\n                <Homepage\r\n                    localweather={localweather}\r\n                    getLonLat={getLonLat}\r\n                    searchInput={searchInput}\r\n                    setQuery={setQuery}\r\n                    convert={convert}\r\n                    oppositeUnit={oppositeUnit}\r\n                    newtemp={newtemp}\r\n                    unit={unit}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Weather;\r\n","import React from 'react';\r\nimport Weather from './Weather'\r\n\r\nconst App = () => {\r\n    return (\r\n        <Weather />\r\n    )\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './index.css'\r\nimport App from './components/App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}